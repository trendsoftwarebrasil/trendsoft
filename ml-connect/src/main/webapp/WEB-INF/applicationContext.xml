<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
 http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context-4.0.xsd
 http://www.springframework.org/schema/tx
 http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- Configuração Banco de Dados -->
	<bean id="myDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/world" />
		<property name="username" value="root" />
		<property name="password" value="wcm@1234" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		<property name="persistenceUnitName" value="mlPU" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="packagesToScan" value="br.com.trendsoft.model" />
	</bean>

	<!-- Procurar no contexto da aplicações todos os beans anotados com @Transacional, 
		para demarcar as transações -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="myDataSource" />
	</bean>

	<!-- Instrui o processamento das anotações definidas na JSR-250 (@Resource, 
		@PreDestroy e @PosConstruct), na JPA (@PersistenceContext e @PersistenceUnit) 
		e outras do próprio Spring -->
	<context:annotation-config />

	<!-- Configuração para injetar o bean usando anotações, instrui o Spring 
		a percorrer as classes no classpath procurando as anotações @Component, @Service, 
		@Controller e @Repository -->
	<context:component-scan base-package="br.com.trendsoft" />


	<!-- Trabalha com a anotações @Resource -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />


</beans>